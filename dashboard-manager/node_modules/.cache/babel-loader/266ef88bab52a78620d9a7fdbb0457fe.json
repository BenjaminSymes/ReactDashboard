{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminsymes/Desktop/GARDEM_Dashboard-master/dashboard-manager/src/components/widgets/widget.jsx\";\nimport React, { Component } from \"react\";\n/**\n * This widget class, in theory, should be replaceable by pretty much\n * anything. We may want to see if it's possible to allow users to add\n * raw html/css/js into widgets somehow, but for now react components\n * will be used. The widget should not have any idea about the dashboard\n * or even its container really.\n */\n\nclass Widget extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Paper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Toolbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }\n    }, this.props.name, this.props.age)), /*#__PURE__*/React.createElement(Widget, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default Widget;","map":{"version":3,"sources":["/Users/benjaminsymes/Desktop/GARDEM_Dashboard-master/dashboard-manager/src/components/widgets/widget.jsx"],"names":["React","Component","Widget","state","render","props","name","age"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA;;;;;;;;AAOA,MAAMC,MAAN,SAAqBD,SAArB,CAA+B;AAAA;AAAA;AAAA,SAC3BE,KAD2B,GACnB,EADmB;AAAA;;AAE3BC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,UAAD;AAAY,MAAA,OAAO,EAAC,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAKC,KAAL,CAAWC,IAArC,EAA2C,KAAKD,KAAL,CAAWE,GAAtD,CADA,CADJ,eAII,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ;AAQH;;AAX0B;;AAc/B,eAAeL,MAAf","sourcesContent":["import React, { Component } from \"react\";\n\n/**\n * This widget class, in theory, should be replaceable by pretty much\n * anything. We may want to see if it's possible to allow users to add\n * raw html/css/js into widgets somehow, but for now react components\n * will be used. The widget should not have any idea about the dashboard\n * or even its container really.\n */\nclass Widget extends Component {\n    state = {};\n    render() {\n        return (\n            <Paper>\n                <Toolbar>\n                <Typography variant=\"h5\">{this.props.name}{this.props.age}</Typography>\n                </Toolbar>\n                <Widget />\n            </Paper>\n        );\n    }\n}\n\nexport default Widget;\n"]},"metadata":{},"sourceType":"module"}