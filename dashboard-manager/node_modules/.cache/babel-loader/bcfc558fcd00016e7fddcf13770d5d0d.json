{"ast":null,"code":"var _jsxFileName = \"/Users/benjaminsymes/Desktop/GARDEM_Dashboard-master/dashboard-manager/src/components/dashboard.js\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport WidgetContainer from \"./widgets/widgetContainer\";\nimport postData from '../data/List.json';\nimport { Toolbar } from \"@material-ui/core\";\nimport GridLayout from 'react-grid-layout';\n/**\n * The dashboard serves as the container for widgets. It should have\n * authority over the grid of widgets and their settings. It can be closed\n * and opened, ie some sort of save file/object saves the contents of the\n * dashboard, and that save can be loaded and unloaded at will, allowing\n * different dashboards.\n */\n\nconst useStyles = makeStyles(theme => ({\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3)\n  }\n}));\nconst layout = [{\n  i: \"a\",\n  x: 0,\n  y: 1,\n  w: 1,\n  h: 1\n}, {\n  i: \"b\",\n  x: 1,\n  y: 1,\n  w: 1,\n  h: 1\n}, {\n  i: \"c\",\n  x: 2,\n  y: 1,\n  w: 1,\n  h: 1\n}];\n\nconst Dashboard = () => {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(GridLayout, {\n    className: \"layout\",\n    layout: layout,\n    cols: 3,\n    rowHeight: 30,\n    width: 800,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, postData.map((postDetail, index) => {\n    return /*#__PURE__*/React.createElement(WidgetContainer, {\n      name: \"postDetails.title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 14\n      }\n    });\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    key: \"a\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(WidgetContainer, {\n    name: \"Benjamin\",\n    age: \"23\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    key: \"b\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(WidgetContainer, {\n    name: \"Mike\",\n    age: \"26\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    key: \"c\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(WidgetContainer, {\n    name: \"\",\n    age: \"26\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/Users/benjaminsymes/Desktop/GARDEM_Dashboard-master/dashboard-manager/src/components/dashboard.js"],"names":["React","makeStyles","WidgetContainer","postData","Toolbar","GridLayout","useStyles","theme","content","flexGrow","padding","spacing","layout","i","x","y","w","h","Dashboard","classes","map","postDetail","index"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA;;;;;;;;AAOA,MAAMC,SAAS,GAAGL,UAAU,CAACM,KAAK,KAAK;AACnCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAE,CADL;AAELC,IAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd;AAFJ;AAD0B,CAAL,CAAN,CAA5B;AAOA,MAAMC,MAAM,GAAG,CACX;AAAEC,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE,CAAb;AAAgBC,EAAAA,CAAC,EAAE,CAAnB;AAAsBC,EAAAA,CAAC,EAAE,CAAzB;AAA4BC,EAAAA,CAAC,EAAE;AAA/B,CADW,EAEX;AAAEJ,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE,CAAb;AAAgBC,EAAAA,CAAC,EAAE,CAAnB;AAAsBC,EAAAA,CAAC,EAAE,CAAzB;AAA4BC,EAAAA,CAAC,EAAE;AAA/B,CAFW,EAGX;AAAEJ,EAAAA,CAAC,EAAE,GAAL;AAAUC,EAAAA,CAAC,EAAE,CAAb;AAAgBC,EAAAA,CAAC,EAAE,CAAnB;AAAsBC,EAAAA,CAAC,EAAE,CAAzB;AAA4BC,EAAAA,CAAC,EAAE;AAA/B,CAHW,CAAf;;AAMA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,sBACI;AAAM,IAAA,SAAS,EAAEa,OAAO,CAACX,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,UAAD;AACI,IAAA,SAAS,EAAC,QADd;AAEI,IAAA,MAAM,EAAEI,MAFZ;AAGI,IAAA,IAAI,EAAE,CAHV;AAII,IAAA,SAAS,EAAE,EAJf;AAKI,IAAA,KAAK,EAAE,GALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKT,QAAQ,CAACiB,GAAT,CAAa,CAACC,UAAD,EAAaC,KAAb,KAAqB;AAC7C,wBAAO,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACA,GAFW,CAPL,eAUI;AAAK,IAAA,GAAG,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,UAAtB;AAAiC,IAAA,GAAG,EAAC,IAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAVJ,eAaI;AAAK,IAAA,GAAG,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,MAAtB;AAA6B,IAAA,GAAG,EAAC,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAbJ,eAgBI;AAAK,IAAA,GAAG,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,EAAtB;AAAyB,IAAA,GAAG,EAAC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAhBJ,CAFJ,CADJ;AAyBH,CA3BD;;AA6BA,eAAeJ,SAAf","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport WidgetContainer from \"./widgets/widgetContainer\";\nimport postData from '../data/List.json'\nimport { Toolbar } from \"@material-ui/core\";\nimport GridLayout from 'react-grid-layout';\n/**\n * The dashboard serves as the container for widgets. It should have\n * authority over the grid of widgets and their settings. It can be closed\n * and opened, ie some sort of save file/object saves the contents of the\n * dashboard, and that save can be loaded and unloaded at will, allowing\n * different dashboards.\n */\nconst useStyles = makeStyles(theme => ({\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3)\n    }\n}));\n\nconst layout = [\n    { i: \"a\", x: 0, y: 1, w: 1, h: 1 },\n    { i: \"b\", x: 1, y: 1, w: 1, h: 1 },\n    { i: \"c\", x: 2, y: 1, w: 1, h: 1 }\n];\n\nconst Dashboard = () => {\n    const classes = useStyles();\n    return (\n        <main className={classes.content}>\n            <Toolbar />\n            <GridLayout\n                className=\"layout\"\n                layout={layout}\n                cols={3}\n                rowHeight={30}\n                width={800}\n            >\n                {postData.map((postDetail, index)=>{\n\t\t\t  \treturn <WidgetContainer name=\"postDetails.title\"/>\n\t\t\t  })}\n                <div key=\"a\">\n                    <WidgetContainer name=\"Benjamin\" age=\"23\" />\n                </div>\n                <div key=\"b\">\n                    <WidgetContainer name=\"Mike\" age=\"26\" />\n                </div>\n                <div key=\"c\">\n                    <WidgetContainer name=\"\" age=\"26\"/>\n                </div>\n            </GridLayout>\n        </main>\n    );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}